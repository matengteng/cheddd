package com.cheddd.activity;

import android.content.DialogInterface;
import android.content.Intent;
import android.support.v7.app.AlertDialog;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.cheddd.R;
import com.cheddd.adapter.RefundDetailsAdapter;
import com.cheddd.base.MyBaseActivity;
import com.cheddd.utils.ToastUtil;
import com.cheddd.view.TopNavigationBar;

import java.util.ArrayList;
import java.util.List;


public class LendMoneyActivity extends MyBaseActivity implements View.OnClickListener, TextWatcher {

    //下一步
    private Button mButtonNext;
    private TopNavigationBar mTnb;
    private RelativeLayout mRelativeCheck;
    private RefundDetailsAdapter mRefundAdapter;
    private List<String> mList;
    //借款方式，还款期数
    private TextView mTextViewStyle, mTextViewRefund;
    private RelativeLayout mRelativeStyle, mRelativeRefund;
    private int position = 0;
    private EditText mEdittextMoney;
    private String[] style = new String[]{"单期借款", "现金分期"};
    //单期借款:7天、10天、15天、30天

    // 现金分期：3月、6月、9月、12月
    private String[] singleStyle = new String[]{"7天", "10天", "15天", "30天"};
    private String[] cashStyle = new String[]{"3月", "6月", "9月", "12月"};


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_lend_money);
        initView();
        initData();
        setListener();
    }

    private void initData() {
        mList = new ArrayList<>();
        for (int i = 0; i < 5; i++) {
            mList.add(i + "");
        }
        mRefundAdapter = new RefundDetailsAdapter(mList, this);
    }

    private void setListener() {
        mEdittextMoney.addTextChangedListener(this);
        mTextViewStyle.addTextChangedListener(this);
        mTextViewRefund.addTextChangedListener(this);
        mRelativeStyle.setOnClickListener(this);
        mRelativeRefund.setOnClickListener(this);
        mButtonNext.setOnClickListener(this);
        mRelativeCheck.setOnClickListener(this);
        mTnb.setOnBackListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });
    }

    private void initView() {
        mTnb = (TopNavigationBar) findViewById(R.id.tnb_lendmoney);
        mRelativeCheck = (RelativeLayout) findViewById(R.id.rl_lendmoney_check);
        mButtonNext = (Button) findViewById(R.id.bt_lendmoney_next);
        mRelativeStyle = (RelativeLayout) findViewById(R.id.rl_lendmoney_style);
        mRelativeRefund = (RelativeLayout) findViewById(R.id.rl_lendmoney_refund);
        mTextViewStyle = (TextView) findViewById(R.id.tv_lendmoney_style);
        mRelativeRefund = (RelativeLayout) findViewById(R.id.rl_lendmoney_refund);
        mTextViewRefund = (TextView) findViewById(R.id.tv_lendmoney_month);
        mEdittextMoney = (EditText) findViewById(R.id.et_lendmoney_money);
    }

    @Override
    public void onClick(View v) {
        if (v != null) {
            switch (v.getId()) {
                case R.id.rl_lendmoney_check:
                    check();
                    break;
                case R.id.bt_lendmoney_next:
                    next();
                    break;
                case R.id.rl_lendmoney_style:
                    style();
                    break;
                case R.id.rl_lendmoney_refund:
                    refund();
                    break;
                default:
                    break;
            }
        }
    }

    //单期借款/现金分期
    private void refund() {
        if (mTextViewStyle.getText().toString().equals("单期借款")) {
            AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setSingleChoiceItems(singleStyle, position, new DialogInterface.OnClickListener() {

                @Override
                public void onClick(DialogInterface dialog, int which) {
                    position = which;
                    mTextViewRefund.setText(singleStyle[which]);
                    dialog.dismiss();
                }
            });
            builder.show();
        } else if (mTextViewStyle.getText().toString().equals("现金分期")) {
            AlertDialog.Builder builder = new AlertDialog.Builder(this);
            builder.setSingleChoiceItems(cashStyle, position, new DialogInterface.OnClickListener() {

                @Override
                public void onClick(DialogInterface dialog, int which) {
                    position = which;
                    mTextViewRefund.setText(cashStyle[which]);
                    dialog.dismiss();
                }
            });
            builder.show();
        } else {
            Toast.makeText(LendMoneyActivity.this, "请您先选择借款方式", Toast.LENGTH_SHORT).show();
            return;
        }
    }

    private void style() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setSingleChoiceItems(style, position, new DialogInterface.OnClickListener() {

            @Override
            public void onClick(DialogInterface dialog, int which) {
                position = which;
                mTextViewStyle.setText(style[which]);
                dialog.dismiss();
            }
        });
        builder.show();
    }

    private void next() {
        Intent intet = new Intent(this, LendBankActivity.class);
        startActivity(intet);
    }


    private void check() {
        final AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("还款详情");
        builder.setTitle("n每月应还本金￥100");
        builder.setTitle("借满5个月总利息￥122.5");
        builder.setAdapter(mRefundAdapter, new DialogInterface.OnClickListener() {
            @Override
            public void onClick(DialogInterface dialog, int which) {
                Toast.makeText(LendMoneyActivity.this, "" + which, Toast.LENGTH_SHORT).show();
                //dialog.dismiss();
            }
        });
        builder.create().show();
    }

    @Override
    public void beforeTextChanged(CharSequence s, int start, int count, int after) {

    }

    @Override
    public void onTextChanged(CharSequence s, int start, int before, int count) {

    }

    @Override
    public void afterTextChanged(Editable s) {
        if (mEdittextMoney.getText().toString().length() > 0)
            if (mTextViewStyle.getText().toString().length() > 0)
                if (mTextViewRefund.getText().toString().length() > 0) {
                    mButtonNext.setEnabled(true);
                } else {
                    mButtonNext.setEnabled(false);
                }

    }
}


